import os, sys, logging
from pathlib import Path
from dotenv import load_dotenv, find_dotenv

ROOT = Path(__file__).resolve().parents[1]

DOTENV_FILE = ROOT / ".venv" / "int.venv"

if DOTENV_FILE.exists():
    load_dotenv(DOTENV_FILE, override=False)
else:
    load_dotenv(find_dotenv(usecwd=True), override=False)

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
AUTH_KEY = os.getenv("AUTH_KEY")

if not TELEGRAM_TOKEN or not AUTH_KEY:
    print(f"[DEBUG] CWD={os.getcwd()}")
    print(f"[DEBUG] TRIED={DOTENV_FILE} (exists={DOTENV_FILE.exists()})")
    raise SystemExit("Missing TELEGRAM_TOKEN or AUTH_KEY")

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
DEFAULT_CERT = os.path.join(os.path.dirname(BASE_DIR), "certs", "russiantrustedca.crt")
VERIFY_CERT_PATH = os.getenv("VERIFY_CERT_PATH", DEFAULT_CERT)
if not os.path.exists(VERIFY_CERT_PATH):
    print(f"‚ö†Ô∏è Certificate not found at {VERIFY_CERT_PATH} (set VERIFY_CERT_PATH or add cert)")

logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(name)s: %(message)s")
logger = logging.getLogger("bot")

LANG_BUTTON = "–Ø–∑—ã–∫"
MODE_OPTIONS = {
    "–≠–∫—à–Ω-—Ç–∞–π—Ç–ª—ã": "action",
    "–í–æ–ø—Ä–æ—Å—ã": "questions",
    "–°—Ç—Ä—É–∫—Ç—É—Ä–∞": "structure",
    "–ì–∏–ø–æ—Ç–µ–∑—ã": "hypotheses",
    "–§—Ä–µ–π–º–≤–æ—Ä–∫–∏": "frameworks",
}
LANG_OPTIONS = {"üá∑üá∫ –†—É—Å—Å–∫–∏–π": "ru", "üá¨üáß –ê–Ω–≥–ª–∏–π—Å–∫–∏–π": "en"}

BTN_MORE = "–ï—â—ë –≤–∞—Ä–∏–∞–Ω—Ç—ã"
BTN_SHORTER = "–ö–æ—Ä–æ—á–µ"
BTN_LONGER = "–î–ª–∏–Ω–Ω–µ–µ"
BTN_STRAIGHT = "–ë–ª–∏–∂–µ –∫ –∏—Å—Ö–æ–¥–Ω–∏–∫—É"
BTN_CREATIVE = "–ë–æ–ª—å—à–µ –∫—Ä–µ–∞—Ç–∏–≤–∞"
BTN_PRESS = "–ü—Ä–µ—Å—Å-—Ç–µ—Å—Ç"
BTN_MORE_Q = "–ï—â–µ –≤–æ–ø—Ä–æ—Å—ã"
BTN_FOLLOWUPS = "–§–æ–ª–ª–æ—É-–∞–ø—ã"

REFINERS = {
    "action":    [BTN_MORE, BTN_SHORTER, BTN_LONGER, BTN_STRAIGHT, BTN_CREATIVE],
    "questions": [BTN_MORE_Q, BTN_FOLLOWUPS],
    "structure": [BTN_PRESS],
    "hypotheses": [BTN_PRESS],
    "frameworks": [BTN_PRESS],
}